<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.rdp</groupId>
	<artifactId>rdpservice</artifactId>
	<version>3.0</version>
	<name>Agente</name>

	<dependencies>



		<!-- https://mvnrepository.com/artifact/org.kordamp.bootstrapfx/bootstrapfx-core -->
		<dependency>
			<groupId>org.kordamp.bootstrapfx</groupId>
			<artifactId>bootstrapfx-core</artifactId>
			<version>0.2.1</version>
		</dependency>


		<dependency>
			<groupId>org.jboss.logging</groupId>
			<artifactId>jboss-logging</artifactId>
			<version>3.3.2.Final</version>
		</dependency>



		<!-- https://mvnrepository.com/artifact/org.quartz-scheduler/quartz -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.3.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/log4j/log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>

		<!-- https://github.com/edvin/fxlauncher -->
		<dependency>
			<groupId>no.tornado</groupId>
			<artifactId>fxlauncher</artifactId>
			<version>1.0.16</version>
		</dependency>
		<dependency>
			<groupId>org.controlsfx</groupId>
			<artifactId>controlsfx</artifactId>
			<version>8.40.11</version>
		</dependency>

		<!-- Java Mail Dependency -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>javax.mail-api</artifactId>
			<version>1.5.5</version>
		</dependency>

		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>

		<!-- Socket <dependency> <groupId>org.springframework</groupId> <artifactId>spring-messaging</artifactId> 
			<version>4.2.1.RELEASE</version> </dependency> <dependency> <groupId>org.springframework</groupId> 
			<artifactId>spring-websocket</artifactId> <version>4.2.1.RELEASE</version> 
			</dependency> <dependency> <groupId>javax.websocket</groupId> <artifactId>javax.websocket-api</artifactId> 
			<version>1.1</version> </dependency> -->

		<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.6</version>
		</dependency>


		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.5</version>
		</dependency>

	</dependencies>

	<properties>
		<!-- Application Name -->
		<app.filename>Agente</app.filename>

		<!-- The JavaFX Application class name -->
		<app.mainClass>com.rdp.App</app.mainClass>

		<!-- Optional override to specify where the cached files are stored. Default 
			is current working directory <app.cacheDir>USERLIB/Agente</app.cacheDir> -->
		<!-- Optional parameters to the application, will be embedded in the launcher 
			and can be overriden on the command line -->
		<app.parameters></app.parameters>

		<!-- The Application vendor used by javapackager -->
		<app.vendor>Desarrollos Inform√°ticos</app.vendor>

		<!-- The Application version used by javapackager -->
		<app.version>3.0</app.version>

		<!-- Base URL where you will host the application artifacts -->

		<!--<app.url>http://10.68.11.218/rdp-agente/</app.url>-->
		 <app.url>https://rdp-gcba.herokuapp.com/static/rdp-agente/</app.url> 


		<!-- The app and launcher will be assembled in this folder -->
		<app.dir>${project.build.directory}/app</app.dir>

		<!-- Native installers will be build in this folder -->
		<app.installerdir>${project.build.directory}/installer</app.installerdir>

		<!-- deploy-->
		<app.deploy.target>C:\Users\desarrollo-ssd\Documents\otros\prueba</app.deploy.target>
			
		<!--<app.deploy.target>\\10.68.11.218\rdp-agente</app.deploy.target>-->
		
		<!-- Should the client downgrade if the server version is older than the 
			local version? -->
		<app.acceptDowngrade>false</app.acceptDowngrade>

	</properties>



	<build>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<outputDirectory>${app.dir}</outputDirectory>
					<downloadSources>true</downloadSources>
					<archive>
						<manifest>
							<mainClass>com.rdp.App</mainClass>
							<addClasspath>true</addClasspath>
						</manifest>
					</archive>
					<downloadJavadocs>false</downloadJavadocs>
				</configuration>
			</plugin>

			<!-- Copy project dependency -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<!-- exclude junit, we need runtime dependency only <includeScope>runtime</includeScope> 
								<excludeScope>provided</excludeScope> <stripVersion>true</stripVersion> -->
							<excludeScope>provided</excludeScope>
							<outputDirectory>${app.dir}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.4.0</version>
				<!-- Generate app.xml manifest -->
				<executions>
					<execution>
						<id>create-manifest</id>
						<phase>package</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>fxlauncher.CreateManifest</mainClass>
							<arguments>
								<argument>${app.url}</argument>
								<argument>${app.mainClass}</argument>
								<argument>${app.dir}</argument>
								<argument>--accept-downgrade=${app.acceptDowngrade}</argument>
								<argument>--include-extensions=png</argument>
								<argument>${app.parameters}</argument>
							</arguments>
						</configuration>
					</execution>
					<!-- Embed app.xml inside fxlauncher.xml so we don't need to reference 
						app.xml to start the app -->
					<execution>
						<id>embed-manifest-in-launcher</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>jar</executable>
							<workingDirectory>${app.dir}</workingDirectory>
							<arguments>
								<argument>uf</argument>
								<argument>fxlauncher-1.0.16.jar</argument>
								<argument>app.xml</argument>
							</arguments>
						</configuration>
					</execution>
					<!-- Optional step to include custom UI, see https://github.com/edvin/fxlauncher-custom-ui -->
					<!--<execution> -->
					<!--<id>embed-custom-ui-in-launcher</id> -->
					<!--<phase>package</phase> -->
					<!--<goals> -->
					<!--<goal>exec</goal> -->
					<!--</goals> -->
					<!--<configuration> -->
					<!--<executable>jar</executable> -->
					<!--<workingDirectory>${app.dir}</workingDirectory> -->
					<!--<arguments> -->
					<!--<argument>uf</argument> -->
					<!--<argument>fxlauncher.jar</argument> -->
					<!--<argument>-C</argument> -->
					<!--<argument>${project.basedir}/../fxlauncher-custom-ui/target/classes</argument> -->
					<!--<argument>.</argument> -->
					<!--</arguments> -->
					<!--</configuration> -->
					<!--</execution> -->
					<!-- Create native installer. Feel free to add more arguments as needed. 
						https://docs.oracle.com/javase/8/docs/technotes/tools/windows/javapackager.html -->
					<execution>
						<id>installer</id>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>javapackager</executable>

							<arguments>
								<argument>-deploy</argument>
								<argument>-native</argument>
								<argument>-outdir</argument>
								<argument>${app.installerdir}</argument>
								<argument>-outfile</argument>
								<argument>${app.filename}</argument>
								<argument>-srcdir</argument>
								<argument>${app.dir}</argument>
								<argument>-srcfiles</argument>
								<argument>fxlauncher-1.0.16.jar</argument>
								<argument>-appclass</argument>
								<argument>fxlauncher.Launcher</argument>
								<argument>-name</argument>
								<argument>${project.name}</argument>
								<argument>-title</argument>
								<argument>${project.name}</argument>
								<argument>-vendor</argument>
								<argument>${app.vendor}</argument>
								<argument>-BshortcutHint=true</argument>
								<argument>-BappVersion=${app.version}</argument>
								<argument>-Bidentifier=${project.groupId}.${project.artifactId}</argument>
							</arguments>
						</configuration>
					</execution>
					<!-- Copy application artifacts to remote site using scp (optional) -->
					<execution>
						<id>deploy-app</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>scp</executable>
							<arguments>
								<argument>-r</argument>
								<argument>target/app/.</argument>
								<argument>${app.deploy.target}</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>copy-resources-1</id>

						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${app.dir}/static</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources/static/</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources-2</id>

						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${app.dir}/views</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources/views/</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Copy project resources -->
			<!-- Set a compiler level -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

		</plugins>
	</build>


</project>
